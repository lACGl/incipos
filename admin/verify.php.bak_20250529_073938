<?php
require_once 'db_connection.php'; // Veritabanı bağlantısı
require_once 'session_manager.php'; // Güvenli session yönetim fonksiyonları
require_once 'netgsm_helper.php'; // NetGSM veritabanı yardımcı sınıfı

// Güvenli oturum başlatma
session_start();

// Kullanıcı oturum kontrolü
if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] !== true) {
    header("Location: index.php");
    exit;
}

// Zaten doğrulanmış kullanıcıyı dashboard'a yönlendir
if (isset($_SESSION['sms_verified']) && $_SESSION['sms_verified'] === true) {
    header("Location: admin_dashboard.php");
    exit;
}

$message = '';
$messageType = 'error'; // Varsayılan mesaj tipi
$disableForm = false;

// SMS doğrulama için süre tanımı
$timeoutSeconds = 180; // 3 dakika

// Doğrulama kodu ve süre başlatma
// Önemli: Bu kontrol index.php'den yönlendirilen ilk istek için yapılmalı
// SMS'in iki kez gönderilmesini önlemek için sms_sent bayrağı kullanılıyor
if (!isset($_SESSION['verification_start_time']) && (!isset($_SESSION['sms_sent']) || $_SESSION['sms_sent'] !== true)) {
    $_SESSION['verification_start_time'] = time();
    $_SESSION['verify_attempts'] = 0; // Hatalı girişleri sıfırla
    
    // Şifrelenmiş telefon numarasını al ve çöz
    if (isset($_SESSION['phone'])) {
        $phoneNumber = decrypt_sensitive_data($_SESSION['phone']);
        
        // Şifrelenmiş doğrulama kodunu çöz
        $verificationCode = decrypt_sensitive_data($_SESSION['verification_code']);
        
        // Kullanıcı aktivite log kaydı
        logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'SMS gönderim başlangıcı');
        
        // NetGSM ile SMS gönderimi
        $netgsm = new NetGSMHelper($conn);
        $result = $netgsm->sendVerificationSMS($phoneNumber, $verificationCode);
        
        // SMS gönderildi bayrağını ayarla
        $_SESSION['sms_sent'] = true;
        
        // Kullanıcı aktivite log kaydı
        logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'SMS gönderimi: ' . ($result['success'] ? 'Başarılı' : 'Başarısız - ' . ($result['message'] ?? 'Bilinmeyen hata')));
        
        if (!$result['success']) {
            $message = "SMS gönderiminde bir sorun oluştu: " . $result['message'];
            $disableForm = true;
        }
    } else {
        $message = "Telefon numarası bulunamadı. Lütfen yönetici ile iletişime geçin.";
        $disableForm = true;
        
        // Hata durumunda kullanıcı giriş log kaydı
        logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Telefon numarası bulunamadı');
    }
}

// Süre kontrolü
if (isset($_SESSION['verification_start_time'])) {
    $timePassed = time() - $_SESSION['verification_start_time'];

    if ($timePassed > $timeoutSeconds) {
        // Süre dolduğunda kullanıcı aktivite log kaydı
        logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Doğrulama süresi doldu');
        
        // SMS doğrulama logunu güncelle
        updateSmsVerificationStatus($conn, $_SESSION['user_id'], 'admin', 'suresi_doldu');
        
        unset($_SESSION['verification_start_time']);
        unset($_SESSION['verification_code']);
        unset($_SESSION['sms_sent']); // SMS gönderim bayrağını temizle
        header("Location: index.php");
        exit;
    }
}

// Doğrulama işlemi
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // CSRF token kontrolü
    if (!isset($_POST['csrf_token']) || !verify_csrf_token($_POST['csrf_token'])) {
        $message = "Güvenlik doğrulaması başarısız. Lütfen sayfayı yenileyip tekrar deneyin.";
    } 
    // Doğrulama kodu doğrulama
    elseif (isset($_POST['verification_code'])) {
        $inputCode = htmlspecialchars(trim($_POST['verification_code']), ENT_QUOTES, 'UTF-8');
        $actualCode = decrypt_sensitive_data($_SESSION['verification_code']);
        
        if ($inputCode == $actualCode) {
            // SMS doğrulama logunu güncelle
            updateSmsVerificationStatus($conn, $_SESSION['user_id'], 'admin', 'dogrulandi');
            
            // Kullanıcı aktivite log kaydı
            logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'Başarılı doğrulama');
            
            unset($_SESSION['verification_code']);
            unset($_SESSION['verification_start_time']);
            unset($_SESSION['sms_sent']); // SMS gönderim bayrağını temizle
            
            // SMS doğrulaması başarılı olarak işaretle
            markSmsVerified();
            
            header("Location: admin_dashboard.php");
            exit;
        } else {
            $_SESSION['verify_attempts'] = isset($_SESSION['verify_attempts']) ? $_SESSION['verify_attempts'] + 1 : 1;
            $remainingAttempts = 3 - $_SESSION['verify_attempts'];
            
            // Kullanıcı aktivite log kaydı
            logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Hatalı doğrulama kodu. Kalan deneme: ' . $remainingAttempts);
            
            if ($_SESSION['verify_attempts'] >= 3) {
                // SMS doğrulama logunu güncelle
                updateSmsVerificationStatus($conn, $_SESSION['user_id'], 'admin', 'basarisiz');
                
                unset($_SESSION['verification_start_time']);
                unset($_SESSION['verification_code']);
                unset($_SESSION['sms_sent']); // SMS gönderim bayrağını temizle
                $message = "Çok fazla hatalı giriş yaptınız. Lütfen tekrar giriş yapın.";
                header("Location: index.php");
                exit;
            } else {
                $message = "Doğrulama kodu hatalı. Kalan deneme hakkı: $remainingAttempts";
            }
        }
    }
    
    // Yeni kod gönderme işlemi
    elseif (isset($_POST['resend_code'])) {
        if (isset($_SESSION['verification_start_time'])) {
            $timePassed = time() - $_SESSION['verification_start_time'];
            if ($timePassed < 60) { // 1 dakikadan az zaman geçtiyse yeni kod göndermeyi engelle
                $message = "Yeni kod göndermek için " . (60 - $timePassed) . " saniye beklemelisiniz.";
                
                // Kullanıcı aktivite log kaydı
                logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Yeni kod gönderme talebi çok erken: ' . (60 - $timePassed) . ' saniye kaldı');
            } else {
                // Yeni doğrulama kodu oluştur
                $newCode = rand(100000, 999999);
                
                // Doğrulama kodunu şifreleyerek session'a kaydet
                $_SESSION['verification_code'] = encrypt_sensitive_data((string)$newCode);
                
                // Telefon numarasını session'dan al (index.php'den gelen)
                if (isset($_SESSION['phone']) && !empty($_SESSION['phone'])) {
                    $phoneNumber = decrypt_sensitive_data($_SESSION['phone']);
                    
                    // Kullanıcı aktivite log kaydı
                    logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'Yeni SMS gönderim başlangıcı');
                    
                    // NetGSM ile SMS gönderimi
                    $netgsm = new NetGSMHelper($conn);
                    $result = $netgsm->sendVerificationSMS($phoneNumber, $newCode);
                    
                    // Kullanıcı aktivite log kaydı
                    logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'Yeni SMS gönderimi: ' . ($result['success'] ? 'Başarılı' : 'Başarısız - ' . ($result['message'] ?? 'Bilinmeyen hata')));
                    
                    if ($result['success']) {
                        $message = "Yeni doğrulama kodu gönderildi.";
                        $messageType = 'success'; // Başarılı mesajı için tip
                        $_SESSION['verification_start_time'] = time(); // Süreyi sıfırla
                    } else {
                        $message = "SMS gönderiminde bir sorun oluştu: " . $result['message'];
                        $disableForm = true;
                    }
                } else {
                    // Telefon numarası bulunamadı, veritabanından tekrar al
                    try {
                        $stmt = $conn->prepare("SELECT telefon_no FROM admin_user WHERE id = ?");
                        $stmt->execute([$_SESSION['user_id']]);
                        $result = $stmt->fetch(PDO::FETCH_ASSOC);
                        
                        if ($result && !empty($result['telefon_no'])) {
                            $phoneNumber = $result['telefon_no'];
                            
                            // Telefon numarası formatını düzenle
                            $phoneNumber = preg_replace('/[^0-9]/', '', $phoneNumber); // Sadece rakamları al
                            
                            // Eğer başında 0 varsa kaldır
                            if (substr($phoneNumber, 0, 1) == '0') {
                                $phoneNumber = substr($phoneNumber, 1);
                            }
                            
                            // Eğer başında ülke kodu yoksa ekle
                            if (substr($phoneNumber, 0, 2) != '90') {
                                $phoneNumber = '90' . $phoneNumber;
                            }
                            
                            // Telefon numarasını şifreleyerek session'a kaydet
                            $_SESSION['phone'] = encrypt_sensitive_data($phoneNumber);
                            
                            // Kullanıcı aktivite log kaydı
                            logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'Yeni SMS gönderim başlangıcı');
                            
                            // NetGSM ile SMS gönderimi
                            $netgsm = new NetGSMHelper($conn);
                            $result = $netgsm->sendVerificationSMS($phoneNumber, $newCode);
                            
                            // Kullanıcı aktivite log kaydı
                            logUserActivity($conn, $_SESSION['user_id'], 'admin', 'dogrulama', 'Yeni SMS gönderimi: ' . ($result['success'] ? 'Başarılı' : 'Başarısız - ' . ($result['message'] ?? 'Bilinmeyen hata')));
                            
                            if ($result['success']) {
                                $message = "Yeni doğrulama kodu gönderildi.";
                                $messageType = 'success'; // Başarılı mesajı için tip
                                $_SESSION['verification_start_time'] = time(); // Süreyi sıfırla
                            } else {
                                $message = "SMS gönderiminde bir sorun oluştu: " . $result['message'];
                                $disableForm = true;
                            }
                        } else {
                            $message = "Telefon numarası bulunamadı.";
                            $disableForm = true;
                            
                            // Hata durumunda kullanıcı giriş log kaydı
                            logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Telefon numarası bulunamadı (yeniden gönderim)');
                        }
                    } catch (PDOException $e) {
                        $message = "Veritabanı hatası: " . $e->getMessage();
                        $disableForm = true;
                        
                        // Hata durumunda kullanıcı giriş log kaydı
                        logUserActivity($conn, $_SESSION['user_id'], 'admin', 'basarisiz', 'Telefon numarası sorgulama hatası (yeniden gönderim): ' . $e->getMessage());
                    }
                }
            }
        } else {
            // Doğrulama başlatılmamış, yeniden başlat
            header("Location: index.php");
            exit;
        }
    }
}

// Kalan süre hesaplama
$remainingTime = isset($_SESSION['verification_start_time']) ? 
    ($timeoutSeconds - (time() - $_SESSION['verification_start_time'])) : 
    $timeoutSeconds;
    
// CSRF token oluştur
$csrf_token = generate_csrf_token();
?>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; style-src 'self' https://cdnjs.cloudflare.com 'unsafe-inline'; font-src 'self' https://cdnjs.cloudflare.com; img-src 'self' data:;">
    <title>İnciPOS - Doğrulama</title>
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script>
        let remainingTime = <?php echo $remainingTime; ?>;
        function countdown() {
            if (remainingTime <= 0) {
                window.location.href = 'index.php';
            } else {
                document.getElementById('remaining-time').innerText = remainingTime;
                remainingTime--;
                setTimeout(countdown, 1000);
            }
        }
        
        // Sayfa yüklendiğinde doğrulama koduna otomatik odaklanma
        window.onload = function() {
            countdown();
            // Doğrulama kodu input alanına odaklan
            const codeInput = document.getElementById('verification_code');
            if (codeInput) {
                codeInput.focus();
            }
            
            // Mesajı göster ve belirli bir süre sonra gizle
            const messageDiv = document.querySelector('.login-message.success-message');
            if (messageDiv) {
                setTimeout(function() {
                    messageDiv.style.opacity = '0';
                    setTimeout(function() {
                        messageDiv.style.display = 'none';
                    }, 500);
                }, 3000);
            }
        };
    </script>
    <style>
        /* Başarı mesajı için animasyon */
        .success-message {
            animation: fadeOut 3s forwards;
            animation-delay: 3s;
        }
        
        @keyframes fadeOut {
            from {opacity: 1;}
            to {opacity: 0; display: none;}
        }
        
        .disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        
        .mt-3 {
            margin-top: 15px;
        }
        
        .w-100 {
            width: 100%;
        }
    </style>
</head>
<body class="login-page">
    <div class="login-wrapper">
        <div class="login-container">
            <div class="login-header">
                <div class="login-logo">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <h1 class="login-title">Doğrulama</h1>
                <p class="login-subtitle">Lütfen telefonunuza gönderilen kodu girin</p>
            </div>
            
            <?php if ($message): ?>
                <div class="login-message <?php echo $messageType === 'success' ? 'success-message' : 'error-message'; ?>">
                    <i class="fas <?php echo $messageType === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'; ?>"></i> <?php echo htmlspecialchars($message); ?>
                </div>
            <?php endif; ?>
            
            <?php if ($disableForm): ?>
                <div class="alert-warning">
                    <p>SMS doğrulama işlemi yapılamadı. Lütfen yönetici ile iletişime geçin veya tekrar giriş yapmayı deneyin.</p>
                    <a href="index.php" class="login-button mt-3">
                        <i class="fas fa-arrow-left"></i> GİRİŞ SAYFASINA DÖN
                    </a>
                </div>
            <?php else: ?>
                <!-- İki form kullanarak, yeni kod gönderme ve doğrulama işlemlerini ayırıyoruz -->
                <!-- Doğrulama kodu formu -->
                <form method="POST" action="verify.php" class="login-form" id="verification-form" autocomplete="off">
                    <!-- CSRF token -->
                    <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                    
                    <div class="form-group">
                        <label for="verification_code"><i class="fas fa-key"></i> Doğrulama Kodu</label>
                        <input type="text" name="verification_code" id="verification_code" class="login-input" placeholder="6 haneli kodu girin" required>
                    </div>
                    
                    <div class="verification-timer">
                        <i class="fas fa-clock"></i> Kalan süre: <span id="remaining-time" class="countdown"><?php echo $remainingTime; ?></span> saniye
                    </div>
                    
                    <button type="submit" class="login-button">
                        <i class="fas fa-check-circle"></i> DOĞRULA
                    </button>
                </form>
                
                <!-- Yeni kod gönderme formu - ayrı bir form olarak tanımlandı -->
                <form method="POST" action="verify.php" class="mt-3">
                    <!-- CSRF token -->
                    <input type="hidden" name="csrf_token" value="<?php echo $csrf_token; ?>">
                    <input type="hidden" name="resend_code" value="1">
                    <button type="submit" class="secondary-button w-100">
                        <i class="fas fa-sync"></i> Yeni Kod Gönder
                    </button>
                </form>
                
                <a href="index.php" class="back-button mt-3">
                    <i class="fas fa-arrow-left"></i> GERİ DÖN
                </a>
            <?php endif; ?>
            
            <?php if (isset($_SESSION['verification_code']) && ($_SERVER['SERVER_NAME'] == 'localhost' || $_SERVER['SERVER_NAME'] == '127.0.0.1')): ?>
                <div class="debug-code">
                    <p>Geliştirme modu: <strong><?php echo decrypt_sensitive_data($_SESSION['verification_code']); ?></strong></p>
                    <p>Telefon: <strong><?php echo isset($_SESSION['phone']) ? decrypt_sensitive_data($_SESSION['phone']) : 'Bulunamadı'; ?></strong></p>
                </div>
            <?php endif; ?>
            
            <div class="login-footer">
                <p>© <?php echo date('Y'); ?> İnciPOS - Tüm Hakları Saklıdır</p>
            </div>
        </div>
    </div>
</body>
</html>